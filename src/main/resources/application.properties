
## ===============================
## = DATA SOURCE
## ===============================
## Set here configurations for the database connection
#spring.datasource.url=jdbc:postgres://xedmckgzqekjkt:e73fe6641eaadc2ac5c3a28a1f1848fcb26c4b44c29c53171e2ac86a5bc97891@ec2-18-235-97-230.compute-1.amazonaws.com:5432/d9rpucf27bt75u
#spring.datasource.username=xedmckgzqekjkt
#spring.datasource.password=e73fe6641eaadc2ac5c3a28a1f1848fcb26c4b44c29c53171e2ac86a5bc97891
#spring.datasource.driver-class-name=org.postgresql.Driver
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
## ===============================
## = JPA / HIBERNATE
## ===============================
#
## Hibernate ddl auto (create, cre# Show or not log for each sql query
##spring.jpa.show-sql=trueate-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create
##spring.jpa.hibernate.ddl-auto=none
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER-CLASS-NAME}
spring.datasource.type = ${SPRING_DATASOURCE_TYPE}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL-AUTO}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_DATABASE-PLATFORM}

# App Properties
grokonez.app.jwtSecret=jwtGrokonezSecretKey
grokonez.app.jwtExpiration=86400        